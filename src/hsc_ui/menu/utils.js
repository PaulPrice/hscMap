// Generated by CoffeeScript 2.0.0-alpha1

export function once(el, type, handler) {
  var cancel, wrapped;
  cancel = function () {
    return el.removeEventListener(type, wrapped);
  };
  wrapped = function (e) {
    handler(e);
    return cancel();
  };
  el.addEventListener(type, wrapped);
  return cancel;
}

export function isClick(e1, e2) {
  var MAX_CLICK_DURATION, MAX_CLICK_MOTION;
  MAX_CLICK_DURATION = 300;
  MAX_CLICK_MOTION = 4;
  return e2.timeStamp - e1.timeStamp < MAX_CLICK_DURATION && Math.pow(e1.screenX - e2.screenX, 2) + Math.pow(e1.screenY - e2.screenY, 2) < Math.pow(MAX_CLICK_MOTION, 2);
}

export function findChildren(root, test = 'isMenuItem') {
  var children, dig;
  children = [];
  dig = function (node) {
    var child, i, len, ref, results;
    ref = node.$children;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      child = ref[i];
      if (typeof child[test] === "function" ? child[test]() : void 0) {
        results.push(children.push(child));
      } else {
        results.push(dig(child));
      }
    }
    return results;
  };
  dig(root);
  return children;
}

export function findParent(node, test = 'isMenu') {
  var base;
  while (true) {
    if (typeof (base = node.$parent)[test] === "function" ? base[test]() : void 0) {
      return node.$parent;
    }
    node = node.$parent;
    if (node === void 0) {
      throw "couldn't find matched parent'";
    }
  }
}