// Generated by CoffeeScript 2.0.0-alpha1
var clientCoord, getRect;

export var setPosition = function (arg) {
  var display, dx, dy, el, left, ref, ref1, refCoord, target, targetCoord, top;
  target = arg.target, ref = arg.ref;
  el = target[0];
  display = el.style.display;
  el.style.display = 'inline-block';
  targetCoord = clientCoord(target);
  refCoord = clientCoord(ref);
  dx = targetCoord.x - refCoord.x;
  dy = targetCoord.y - refCoord.y;
  ref1 = getRect(el), left = ref1.left, top = ref1.top;
  el.style.left = `${left - dx}px`;
  el.style.top = `${top - dy}px`;
  return el.style.display = display;
};

function clientCoord([el, text]) {
  let [xText, yText] = text.split(';')
  if (yText == undefined)
    yText = xText
  const javascript = (expr, scope) => {
    return `
            (function() {
                ${ Object.keys(scope).map(k => `var ${k} = ${JSON.stringify(scope[k])}`).join('; ')};
                return ${expr};
            })()
        `
  }
  let rect = getRect(el)
  const x = eval(javascript(xText, { ...rect, center: (rect.left + rect.right) / 2 }))
  const y = eval(javascript(yText, { ...rect, center: (rect.top + rect.bottom) / 2 }))
  return { x, y }
}

export function getRect(el) {
  if (el === window) {
    return {
      top: 0,
      left: 0,
      right: el.innerWidth,
      bottom: el.innerHeight,
      width: el.innerWidth,
      height: el.innerHeight
    };
  } else {
    const { left, right, top, bottom, width, height } = el.getBoundingClientRect();
    return { left, right, top, bottom, width, height }
  }
}


export function setRect(el, rect) {
  const s = el.style
  s.top = `${rect.top}px`
  s.left = `${rect.left}px`
  s.width = `${rect.width}px`
  s.height = `${rect.height}px`
}